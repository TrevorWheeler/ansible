- name: Install prerequisites for 'g'
  apt:
    name:
      - curl
      - git
      - build-essential
    state: present
    update_cache: yes
  become: yes

- name: Download and install 'g' (Go Version Manager)
  shell: |
    curl -sSL https://raw.githubusercontent.com/voidint/g/master/install.sh | bash
  args:
    creates: "/home/{{ current_user }}/.g/bin/g"
  become: yes
  become_user: "{{ current_user }}"

- name: Add 'g' initialization to .bashrc
  lineinfile:
    path: "/home/{{ current_user }}/.bashrc"
    line: 'source "/home/{{ current_user }}/.g/env"'
    state: present
  become: yes
  become_user: "{{ current_user }}"

- name: Add 'g' initialization to .zshrc (if exists)
  lineinfile:
    path: "/home/{{ current_user }}/.zshrc"
    line: 'source "/home/{{ current_user }}/.g/env"'
    state: present
  become: yes
  become_user: "{{ current_user }}"
  ignore_errors: yes

- name: Get latest stable Go version
  shell: |
    source "/home/{{ current_user }}/.g/env"
    g ls-remote stable | tail -n 1
  args:
    executable: /bin/bash
  register: go_latest_version
  become: yes
  become_user: "{{ current_user }}"

- name: Install latest stable Go version using 'g'
  shell: |
    source "/home/{{ current_user }}/.g/env"
    g install {{ go_latest_version.stdout }}
    g use {{ go_latest_version.stdout }}
  args:
    executable: /bin/bash
  become: yes
  become_user: "{{ current_user }}"

- name: Verify Go installation
  shell: |
    source "/home/{{ current_user }}/.g/env"
    go version
  args:
    executable: /bin/bash
  register: go_version
  changed_when: false
  become: yes
  become_user: "{{ current_user }}"

- name: Display installed Go version
  debug:
    var: go_version.stdout